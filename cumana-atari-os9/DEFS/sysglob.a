 opt -l nam System Global Data Definitions********************************* Edition History*  #   Date    Changes Made													by* -- -------- ------------------------------------------------------------- ---* 01 11/09/84 Split from process.a file.									rfd* 02 01-11-85 Added event queue variables.									rfd* 03 05-13-85 Changed active queue to doubly-linked.						rfd*             Added D_ActAge, changed process aging technique.				rfd* 04 05-31-85 Rearranged slightly; added event tbl end ptr.					rfd*				and ActMem ptr, for initialized acct mod data.				rfd* 05 06-19-85 Added D_MPUTyp (to be passed from boot rom.					rfd*				---- OS-9/68k V1.2 released ----* 06 08-12-85 Eliminated P$Queue and D_WProcQ.								rfd* 07 08-22-85 Added D_MinBlk & D_BlkSiz for new mem allocation.				rfd* 08 09-09-85 Removed D_FreRAM and D_FreeCn.								rfd*             Renamed D_LowMem, D_HiMem to D_FreMem.						rfd* 09 09-16-85 Added SPU definitions.										rfd* 10 01-20-86 Made System Process descr part of global static.				rfd* 11 01-31-86 Added block and fragment sizes (powers of 2).					rfd* 12 03-13-86 Added D_Sieze process ID.										rfd* 13 07-02-86 Added FPU defs: D_68881, D_FProc.								rfd*             Removed obsolete DAT conditionals.							rfd* 14 09-03-86 Rearranged for better (020) long-word alignment.				rfd* 15 09-11-86 Added D_ProcSz to encourage its use.							rfd* 16 09-16-86 Added 'T_' defs (from process.a).								rfd*             Added D_Cigar: gross version of defs used.					rfd* 17 09-17-86 Added FPU trap 'T_' names.									rfd* 18 09-25-86 Added D_Compat for smooting upgrade problems.					rfd*				---- OS-9/68k V2.0 released ----* 19 01-27-87 Added D_Flags for customization flags.						rfd* 20 03-25-87 Added D_Cache.												rfd* 21 04-09-87 Removed D_SProc.												rfd*    04-16-87 Added D_MMinLim D_MMaxLim.									rfd* 22 05-05-87 Changed (removed) SPU definitions.							rfd* 23 05-11-87 Removed user accounting module definitions.					rfd*             Removed D_Flags.												rfd*             Added D_Compat definitions.									rfd* 24 05-21-87 Added D_SStkLm.												rfd*				---- OS-9/68k V2.1 released ----* 25 08-25-87 Added D_Thread, and later D_AlarTh.							rfd* 26 09-15-87 Changed D_Tick, D_Slice, D_TSlice bytes to words.				rfd*				---- OS-9/68k V2.2 released ----* 27 03-11-88 Moved D_PolTbl; added 68070 on-chip vectors.					rfd* 28 05-27-88 Added D_ClkMem.												rfd* 29 05-31-88 Added D_IPCmd and D_FreeMem.									rfd* 30 07-05-88 Added (warren's) Cache control definitions.					rfd* 31 07-18-88 Added D_IPID.													rfd* 32 08-11-88 Added D_Forks.												rfd*				---- CD-RTOS V0.97 released ----* 33 09-19-88 Added a few Memory color definitions (for CD-I).				rfd* 34 10-06-88 Changed compat byte names slightly, added B_ZapMem.			rfd*    10-07-88 Added D_ID.													rfd*				---- CD-RTOS V0.99 released ----* 35 11-22-88 Added D_IRQFlag.												rfd*				---- OS-9/68k V2.2 edition #50 released ----*				---- OS-9/68k V2.3 released ----* 36 08-23-89 Added D_NoSleep.												wwb*				---- OS-9/68k V2.3 edition #66 released ----*edition equ 36 current edition number psect sysglob,0,0,edition,0,0 pag********************************* System Global Variable DefinitionsSysGlob:	equ 1<<24 system global format revision (for D_Cigar) org 0D_ID:		do.w 1 set to modsync code after coldstart has finishedD_NoSleep:	do.w 1 set to non-zero to prevent sysproc from sleeping.			do.w 14 reservedD_Init:		do.l 1 initialization module ptr ("init")D_Clock:	do.l 1 address of system tick routineD_TckSec:	do.w 1 number of ticks per secondD_Year:		do.w 1 yearD_Month:	do.b 1 monthD_Day:		do.b 1 dayD_Compat:	do.b 1 reserved for version compatability problemsD_68881:	do.b 1 (68020/68030 systems): 0 = no FPU, 1 = 68881, 2 = 68882D_Julian:	do.l 1 julian day numberD_Second:	do.l 1 system time: seconds left until midnight			do.b 2 reserved (old D_Tick, T_TSlice, D_Slice)D_IRQFlag:	do.b 1 IRQ flagD_UnkIRQ:	do.b 1 number of times unknown IRQ occurred in a rowD_ModDir:	do.l 2 module directory (start & end ptrs)D_PrcDBT:	do.l 1 Process Descriptor Block Table ptrD_PthDBT:	do.l 1 Path Descriptor Block Table ptrD_Proc:		do.l 1 Current Process descriptor ptrD_SysPrc:	do.l 1 System Process Descriptor ptrD_Ticks:	do.l 1 ever-increment system tickD_FProc:	do.l 1 Process whose context is in FPU registersD_AbtStk:	do.l 1 System state bus trap panic abort sp, return pcD_SysStk:	do.l 1 System IRQ stack ptrD_SysROM:	do.l 1 Bootstrap ROM execution entry pointD_ExcJmp:	do.l 1 Exception Jump Table ptrD_TotRAM:	do.l 1 total RAM found by BootROM at startupD_MinBlk:	do.l 1 process minimum allocatable block sizeD_FreMem:	do.l 2 system free memory list headD_BlkSiz:	do.l 1 system minimum allocatable block sizeD_DevTbl:	do.l 1 I/O Device Table ptr			do.l 1 reservedD_AutIRQ2:	do.l 7 68070 on-chip I/O AutoVector Polling table headsD_VctIRQ:	do.l 192 Vectored Interrupt device tbl ptrsD_SysDis:	do.l 1 System Service dispatch table ptrD_UsrDis:	do.l 1 User Service dispatch table ptrD_ActivQ:	do.l 2 Active process queue headD_SleepQ:	do.l 2 Sleeping process queue headD_WaitQ:	do.l 2 Sleeping process queue headD_ActAge:	do.l 1 Active queue ageD_MPUTyp:	do.l 1 MPU type (68000/68010/68020/68030/68070)D_EvTbl:	do.l 2 ptr to system Event table start, endD_EvID:		do.l 1 next (incrementing) event ID numberD_SPUMem:	do.l 1 ptr to SPU global variables (null == not enabled)D_AddrLim:	do.l 1 highest address found during startup			do.w 1 reservedD_ProcSz:	do.w 1 size of a process descriptorD_PolTbl:	do.l 8 I/O AutoVector Polling table headsD_FreeMem:	do.l 2 head of system free memory color node listD_IPID:		do.w 1 interprocessor identification number			do.w 1 reservedD_CPUs:		do.l 1 ptr to array of cpu descriptor list headsD_IPCmd:	do.l 2 head of inter-processor command queueD_SProc		do.l 210 reserved (old system process descriptor stub)D_CachMode:	do.l 1 68020/68030 CACR modeD_DisInst:	do.l 1 instruction cache disable depthD_DisData:	do.l 1 data cache disable depthD_ClkMem:	do.l 1 ptr to clock tick thief's static storageD_Tick:		do.w 1 current tickD_TSlice:	do.w 1 ticks per sliceD_Slice:	do.w 1 current time slice remaining (ticks)			do.w 1 reservedD_Elapse:	do.l 1 time (ticks) to elapse before sys proc is awakenedD_Thread:	do.l 2 system Thread queue head (immediate, or at absolute time)D_AlarTh:	do.l 2 system timed alarm threads (relative times)D_SStkLm:	do.l 1 System IRQ stack low boundD_Forks:	do.l 1 Number of actively forked processes.D_BootRAM:	do.l 1 Ram found during bootrom search (for integrity check)			do.l 2 reservedD_IOGlob:	do.b 256 System Hardware dependent I/O flags			do.w 1 reservedD_MinPty:	do.w 1 system minimum process priorityD_MaxAge:	do.w 1 system priority maximum age limitD_Sieze:	do.w 1 process ID of process that has siezed cpuD_Cigar:	do.l 1 gross estimate of sysglob, process, and module defsD_MMinLim	do.l 1 former minimum memory address allocatableD_MMaxLim	do.l 1 former maximum memory address allocatable (+1)			do.l 11 reservedD_SysLst:	equ . last user changable global			do.l 1 reserved (former D_ActMod: user accounting module ptr)			do.l 1 reserved (former D_ActMem: user accounting memory ptr)D_SysDbg:	do.l 1 system debugger entry pt addressD_DbgMem:	do.l 1 system debugger memory ptrD_DbgFlg:	do.b 1 system debugger active flag			do.b 3 reservedD_Cache:	do.l 1 disk cache buffer head			do.b $1000-. reserved for system stackD_End:		equ . End of system global RAMNoCRC:		equ 28523 avoid CRC chk if D_ID = No_CRC (for warmstart) pag********************************* Service Dispatch Table special entriesSysTrap:	equ $8000 system state entry org 0 Free Memory Block offsetsM_NxtPtr:	do.l 1 ptr to next higher free blockM_PrvPtr:	do.l 1 ptr to next lower free blockM_BlkSiz:	do.l 1 size of this block** Exception Vector address definitions org 0T_ColdSP:	do.l 1 (0) reset initial SSPT_ColdPC:	do.l 1 (1) reset initial PCT_BusErr:	do.l 1 (2) bus errorT_AddErr:	do.l 1 (3) address errorT_IllIns:	do.l 1 (4) illegal instructionT_ZerDiv:	do.l 1 (5) zero divideT_CHK:		do.l 1 (6) CHK instructionT_TRAPV:	do.l 1 (7) TRAPV instructionT_Priv:		do.l 1 (8) privelage violationT_Trace:	do.l 1 (9) traceT_1010:		do.l 1 (10) line 1010 emulatorT_1111:		do.l 1 (11) line 1111 emulator			do.l 3 (12-14) reservedT_UnIRQ:	do.l 1 (15) unitialized interrupt vector			do.l 8 (16-23) reservedT_SpurIO:	do.l 1 (24) spurious interruptT_AutIRQ:	do.l 7 (25-31) level 1-7 interrupt autovectorsT_TRAP:		do.l 16 (32-47) TRAP instruction vectorsT_FPUnordC:	do.l 1 (48) FPCP bra or set on unordered conditionT_FPInxact:	do.l 1 (49) FPCP inexact resultT_FPDivZer:	do.l 1 (50) FPCP divide by zeroT_FPUndrFl:	do.l 1 (51) FPCP underflowT_FPOprErr:	do.l 1 (52) FPCP operand errorT_FPOverFl:	do.l 1 (53) FPCP overflowT_FPNotNum:	do.l 1 (54) FPCP signaling not a number			do.l 2 (55-56) reservedT_AutIRQ2:	do.l 7 (57-63) 68070 level 1-7 on-chip interrupt autovectorsT_VctIRQ:	do.l 192 vectored interrupt vectorsT_End:		equ .AutOffs:	equ D_PolTbl-T_AutIRQ+4 constant needed in kernel excpt.a & poll.aVctOffs:	equ D_AutIRQ2-T_AutIRQ2 constant needed in kernel excpt.a & poll.a* process catchable error trapsMINTRAP:	equ T_BusErr minimum user catchable TRAP numberMAXTRAP:	equ T_1111 maximum user catchable TRAP numberFPCPMIN:	equ T_FPUnordC lowest catchable FPCP eror (68020/68030)FPCPMAX:	equ T_FPNotNum highest (68020/68030)* D_Compat flag bit numbersB_SlowIRQ:	equ 0 xxxxxxx1 save all regs during IRQ processing if setB_NoStop:	equ 1 xxxxxx1x don't use stop instruction if setB_NoGhost:	equ 2 xxxxx1xx don't retain Ghost memory modules if setB_NoBurst:	equ 3 xxxx1xxx don't enable cache burst mode (68030) if setB_ZapMem:	equ 4 xxx1xxxx wipe out memory that is allocated/freedB_NoClock:	equ 5 xx1xxxxx don't start system clock during coldstart* memory type access bit definitionsB_USER:		equ 1<<0	memory allocatable by user procsB_PARITY:	equ 1<<1	parity memory; must be initializedB_ROM:		equ 1<<2	read-only memory; searched for modulesB_NVRAM:	equ 1<<3	non-volatile RAM; searched for modulesB_SHARE:	equ 1<<4	shared memory* Memory color definitionsSYSRAM:	equ $01	generic system ramVIDEO1:	equ $80	CD-I video bank 1VIDEO2:	equ $81	CD-I video bank 2 pag use ioglob.a include system specific I/O global definitions ends opt l