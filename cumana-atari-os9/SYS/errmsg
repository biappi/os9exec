000:001 Process has aborted000:002 (S$Abort signal)  Keyboard Quit (^E) typed000:003 (S$Intrpt signal) Keyboard Interrupt (^C) typed000:004 (S$HangUp signal) modem hangup000:064 (E$IllFnc) Illegal function code (usually math).000:065 (E$FmtErr) ascii->numeric format conversion error (math)000:066 (E$NotNum) Number not found (math).000:067 (E$IllArg) Illegal argument (usually math).000:102 (E$BusErr) A bus trap error occurred.000:103 (E$AdrErr) An address trap error occurred.000:104 (E$IllIns) An illegal instruction exception occurred.000:105 (E$ZerDiv) A zero divide exception occurred.000:106 (E$Chk)    A "chk" or "chk2" instruction trap occurred.000:107 (E$TrapV)  A "trapv" or "trapcc" instruction occurred.000:108 (E$Violat) A privileged instruction violation occurred.000:109 (E$Trace)  An uninitialized Trace exception occurred.000:110 (E$1010)   A "1010" instruction exception occurred.000:111 (E$1111)   A "1111" instruction exception occurred.000:112 (E$Resrvd) An invalid exception occurred (#12).000:113            Coprocessor protocol violation.000:114            System stack frame format error.000:115            An uninitialized interrupt occurred.000:116            An invalid exception occurred (#16).000:117            An invalid exception occurred (#17).000:118            An invalid exception occurred (#18).000:119            An invalid exception occurred (#19).000:120            An invalid exception occurred (#20).000:121            An invalid exception occurred (#21).000:122            An invalid exception occurred (#22).000:123            An invalid exception occurred (#23).000:124            Spurious Interrupt occurred.000:133 (E$Trap)   An uninitialized user TRAP (1-15) was executed.000:148 (E$FPUnordC) floating point coprocessor unordered condition000:149 (E$FPInxact) floating point coprocessor inexact result000:150 (E$FPDivZer) floating point coprocessor divide by zero000:151 (E$FPUndrFl) floating point coprocessor underflow000:152 (E$FPOprErr) floating point coprocessor operand error000:153 (E$FPOverFl) floating point coprocessor overflow000:154 (E$FPNotNum) floating point coprocessor not a number000:155            An invalid exception occurred (#55)000:156            PMMU Configuration exception000:157            PMMU Illegal Operation exception000:158            PMMU Access Level Violation exception000:159            An invalid exception occurred (#59)000:160            An invalid exception occurred (#60)000:161            An invalid exception occurred (#61)000:162            An invalid exception occurred (#62)000:163            An invalid exception occurred (#63)000:164 (E$Permit) No permission. A user process has attempted something that may be done only by a system "super user".000:165 (E$Differ) The arguments to F$ChkNam do not match.000:166 (E$StkOvf) System stack overflow. F$ChkNam can return this error if the pattern string is too complex.000:167 (E$EvntID) Invalid or Illegal event ID number specified.000:168 (E$EvNF)   Event name not found.000:169 (E$EvBusy) The event is busy (and can't be deleted).000:170 (E$EvParm) Impossible event parameters supplied.000:171 (E$Damage) System data structures have been damaged.000:172 (E$BadRev) Module revision is incompatible with operating system.000:173 (E$PthLost) Path became lost because network node was down.000:174 (E$BadPart) Bad (disk) partition data, or no active partition.000:175 (E$Hardware) Hardware damage has been dectected000:200 (E$PthFul) The user's (or system) path table is full. Usually this error occurs because a user program has tried to open more than 32 I/O paths simultanuously.  It might also occur if the system path table becomes full, and can't be expanded.000:201 (E$BPNum)  Bad Path Number. An I/O request has been made with an invalid path number, or one that is not currently open.000:202 (E$Poll)   The system IRQ table is full. To install another interrupt producing device, one must first be removed.  The system's init module specifies the maximum number of IRQ devices that may be installed.000:203 (E$BMode)  Bad I/O Mode. An attempt has been made to perform I/O on a path incapable of supporting it.  For example, writing to a path open for input.000:204 (E$DevOvf) The system's device table is full. To install another device descriptor, one must first be removed. The system "init" module may be changed to allow more devices.000:205 (E$BMID)   Bad Module ID. An attempt has been made to load a module that does not have a valid module header.000:206 (E$DirFul) The module directory is full. No more modules may be loaded or created unless one is first unlinked. OS-9 automatically expands the module directory when it becomes full. This error occurrs when it is unable to do so.000:207 (E$MemFul) Memory Full. This error is returned from the F$SRqMem service call when there isn't enough system RAM to fulfill the request, or if a process has already allocated the maximum number of blocks permitted by the system.000:208 (E$UnkSvc) Unknown Service Code A OS-9 call specified an unknown or invalid service code, or a getstat/setstat call was made with an unknown status code.000:209 (E$ModBsy) The module is busy. An attempt has been made to use (ie: F$Link) a non-sharable module that is already in use.  This includes non-sharable devices.000:210 (E$BPAddr) Bad page address. The system has been given a buffer pointer or size which is invalid, often because it references memory which has not been allocated to the caller.  The system detects trouble when the buffer is returned to free memory, or if it is used as the destination of a data transfer, such as I$Read.000:211 (E$EOF)    The end of file has been reached.000:212 (E$VctBsy) IRQ Vector is busy. A device has tried to install itself in the IRQ table to handle a vector that has been claimed by another device.000:213 (E$NES)    Non-Existing Segment.000:214 (E$FNA)    File not accessible. An attempt to open a file failed.  The file was found, but is inaccessible in the requested mode.  Check the file's owner ID and access attributes.000:215 (E$BPNam)  Bad pathlist specified. The pathlist specified is syntactically incorrect.000:216 (E$PNNF)   File not found. The pathlist does not lead to any known file.000:217 (E$SLF)    File segment list is full. A file has become too fragmented to accomodate further growth.  This can occur on a nearly full disk, or one whose free space has become scattered. The simplest way to solve the problem is to copy the file, which should move it into more contiguous areas.000:218 (E$CEF)    Tried to create a file that already exists.000:219 (E$IBA)    Illegal memory block specified. The system was called to return memory, but was passed an invalid pointer or block size.000:220 (E$HangUp) Telephone (modem) connection terminated. This error is returned when an I/O operation is attempted on a path after irrecoverable line problems have occurred, such as data carrier lost.  It may be returned from network devices, if the network connection is lost.000:221 (E$MNF)    Module not found. An F$Link call was made to a module not in memory.000:222 (E$NoClk)  No system clock. A timed F$Sleep call has been requested, but the clock was not running. The setime utility is used to start the system clock.000:223 (E$DelSP)  Deleting stack memory. A process tried to return to the system the memory containing it's current stack pointer.  Considered a suicide attempt.000:224 (E$IPrcID) Illegal process ID. A system call was passed the process ID of a non-existant process, or one that the user may not access.000:225 (E$Param)  Bad parameter. A service request has been passed an illegal or impossible parameter.000:226 (E$NoChld) No children. An F$Wait call was made with no child process active.000:227 (E$ITrap)  Invalid trap number. The user trap code specified to TLink is invalid or already in use.000:228 (E$PrcAbt) The process has been aborted.000:229 (E$PrcFul) Too many active processes. The system's process table is full.  The OS-9 kernel automatically tries to expand the process table, but returns this error it's unable to do so.000:230 (E$IForkP) Illegal Fork Parameter.  (not currently used)000:231 (E$KwnMod) Known Module. A call was made to install a module that is already in memory.000:232 (E$BMCRC)  Bad module CRC. A CRC calculation is performed on every module when it is installed in the system module directory.  Only modules with a good CRC are accepted.  To generate a valid CRC in a module that has been intentionally altered, use the "fixmod" utility.000:233 (E$Signal)  Signal error.  (not currently used)000:234 (E$NEMod)  Non Executable Module.000:235 (E$BNam)   Bad Name. This error is returned by the F$PrsNam system call if the name is not syntactically correct.000:236 (E$BMHP)   Bad module header parity.000:237 (E$NoRAM)  No RAM Available. A process has made an F$Mem request to expand its memory size (no longer supported; use F$SRqMem).  This error may also be returned if there isn't enough (contiguous) memory to process a fork request, or if a device driver doesn't specify any static storage requirements.000:238 (E$DNE)    The directory is not empty. The directory attribute of a file may not be removed unless the directory is empty, to prevent accidental loss of disk space.000:239 (E$NoTask) No available Task number. This error might be returned by an OS-9 system security module (SSM).000:240 (E$Unit)   Illegal Unit (drive) number.000:241 (E$Sect)   Bad disk sector number.000:242 (E$WP)     Media is write protected.000:243 (E$CRC)    Bad Module Cyclic Redundancy Check value.000:244 (E$Read)   Read Error.000:245 (E$Write)  Write Error.000:246 (E$NotRdy) Device not ready.000:247 (E$Seek)   Seek Error.000:248 (E$Full)   Media Full.000:249 (E$BTyp)   Bad Type (incompatible media).000:250 (E$DevBsy) Device Busy.000:251 (E$DIDC)   Disk ID change. RBF copies the disk ID number (from sector zero) into the path descriptor of each path when it is opened.  If this does not agree with the driver's current disk ID, this error is returned.  The driver updates the current disk ID only when sector zero is read; it is therefore possible to swap disks without RBF noticing.  This check helps to prevent that possibility.000:252 (E$Lock)   Record is busy. Normal record locking routines will wait forever for a record in use by another user to become available.  However, RBF may be asked (via setstat) to only wait for a finite amount of time.  If the time expires before the record becomes free, this error is returned.000:253 (E$Share)  Non-sharable file/device is busy. A common way to get this error is to try to delete a file that is currently open.  Any time a file or device is open for non-sharable access, further attempts to open it cause this error.000:254 (E$DeadLk) I/O Deadlock error. This error is returned if two (or more) processes are waiting for each other to release I/O resources before they can proceed.000:255 (E$Format) Device is format protected. This error occurs when an attempt is made to format a disk that has been format protected.  A bit in the device descriptor may be changed to allow the device to be formatted.  Formatting is usually inhibitted on hard disks to prevent accidental erasure.006:000 (E$IllPrm) Illegal parameter006:001 (E$IdFull) Identifier (ID) table full006:002 (E$BadSiz) Bad size error006:003 (E$RgFull) Region definition full (overflow)006:004 (E$UnID)   Unallocated identifer number006:005 (E$NullRg) Null region006:006 (E$BadMod) Bad drawmap/pattern mode006:007 (E$NoFont) No active font006:008 (E$NoDM)   No drawmap006:009 (E$NoPlay) No audio play in progress006:010 (E$Abort)  Asynchronous operation aborted006:011 (E$QFull)  Audio queue is full006:012 (E$Busy)   Audio processor is busy007:001 (EWOULDBLOCK)  I/O operation would block007:002 (EINPROGRESS)  I/O operation now in progress007:003 (EALREADY)     operation already in progress007:004 (EDESTADDRREQ) destination address required007:005 (EMSGSIZE)     message too long007:006 (EPROTOTYPE)   protocol wrong type for socket007:007 (ENOPROTOOPT)  bad protocol option007:008 (EPROTONOSUPPORT) protocol not supported007:009 (ESOCKNOSUPPORT) socket type not supported007:010 (EOPNOTSUPP)   operation unsupported on socket007:011 (EPFNOSUPPORT) protocol family not supported007:012 (EAFNOSUPPORT) addr family unsupported by protocol007:013 (EADDRINUSE)   address already in use007:014 (EADDRNOTAVAIL) can't assign requested address007:015 (ENETDOWN)     network is down007:016 (ENETUNREACH)  network is unreachable007:017 (ENETRESET)    network lost connection on reset007:018 (ECONNABORTED) software caused connection abort007:019 (ECONNRESET)   connection reset by peer007:020 (ENOBUFS)      no buffer space available007:021 (EISCONN)      socket is already connected007:022 (ENOTCONN)     socket is not connected007:023 (ESHUTDOWN)    can't send after socket shutdown007:024 (ETOOMANYREFS) too many references007:025 (ETIMEDOUT)    connection timed out007:026 (ECONNREFUSED) connection refused by target007:027 (EBUFTOOSMALL) buffer too small for F$MBuf operation007:028 (ESMODEXISTS)  socket module already attached007:029 (ENOTSOCK)     path is not a socket